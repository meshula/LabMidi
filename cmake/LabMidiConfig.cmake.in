@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Find dependencies based on platform
if(WIN32)
    # Windows dependencies handled internally
elseif(APPLE)
    # macOS dependencies handled internally
elseif(UNIX)
    if(@HAVE_JACK@)
        find_dependency(PkgConfig)
        pkg_check_modules(REQUIRED jack)
    else()
        find_dependency(ALSA)
    endif()
    
    if(@NEED_PTHREAD@)
        find_dependency(Threads)
    endif()
endif()

# Include the exported targets
include("${CMAKE_CURRENT_LIST_DIR}/LabMidiTargets.cmake")

# Set platform-specific properties
if(WIN32)
    set_property(TARGET liblabmidi APPEND PROPERTY 
        INTERFACE_COMPILE_DEFINITIONS "__WINDOWS_MM__" "_CRT_SECURE_NO_WARNINGS")
elseif(APPLE)
    set_property(TARGET liblabmidi APPEND PROPERTY 
        INTERFACE_COMPILE_DEFINITIONS "__MACOSX_CORE__")
elseif(UNIX)
    if(@HAVE_JACK@)
        set_property(TARGET liblabmidi APPEND PROPERTY 
            INTERFACE_COMPILE_DEFINITIONS "__LINUX_JACK__")
    else()
        set_property(TARGET liblabmidi APPEND PROPERTY 
            INTERFACE_COMPILE_DEFINITIONS "__LINUX_ALSASEQ__")
    endif()
endif()

# Create alias target if it doesn't exist
if(NOT TARGET Lab::Midi)
    add_library(Lab::Midi ALIAS liblabmidi)
endif()

check_required_components(LabMidi)
